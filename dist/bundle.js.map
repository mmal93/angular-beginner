{"version":3,"sources":["node_modules/browser-pack/_prelude.js","main.ts","week-1/ex-1.ts","week-1/ex-2.ts","week-1/ex-3.ts","week-1/ex-4.ts","week-1/ex-5.ts","week-1/ex-6.ts","week-1/ex-7.ts","week-1/ex-8.modules.ts","week-1/ex-8.ts","week-1/ex-9.ts","week-1/index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import runApp1 from \"./week-1/index\"\nrunApp1();","/**\n * Returns the sum of the array\n * \n * @param {Array} arr Is an array of numbers\n * @returns {Number} The sum of the array\n */\nexport function sumOfArray(arr : number[]) : number {\n    return arr.reduce((a : number, b : number) : number => a + b, 0);\n}\n/**\n * Returns the sum of the array\n * \n * @param {Array} arr Is an array of numbers\n * @returns {Number} The sum of the array\n */\nexport function sumOfArray2(arr : number[]) : number {\n    let sum : number = 0;\n    for (let counter = 0; counter < arr.length; counter++) {\n        sum += arr[counter];\n    }\n    return sum;\n}\n/**\n * Returns the sum of the array\n * \n * @param {Array} arr Is an array of numbers\n * @returns {Number} The sum of the array\n */\nexport function sumOfArray3(arr : number[]) : number {\n    let sum : number = 0;\n    arr.forEach((item : number) : void => {\n        sum += item;\n    });\n    return sum;\n}\nexport default {\n    sumOfArray,\n    sumOfArray2,\n    sumOfArray3\n}\n","export interface Person {\n    name: String,\n    age: number,\n    email: String\n}\nexport function printPerson(person : Person) : void {\n    document.writeln(`Name: ${person.name}<br />Age: ${person.age}<br />Email: ${person.email}`);\n}\n","const getFirstItem = <T>(items: T[]): T | null => items.length > 0 ? items[0] : null;\nexport default getFirstItem\n","enum Colours {\n    RED     = 'red',\n    GREEN   = 'green',\n    BLUE    = 'blue'\n}\n\nconst printColour = (colour: Colours) => {\n    document.writeln(`Color name: ${colour}`)\n}\n\nexport {\n    Colours,\n    printColour\n}\n","class Rectangle {\n    private width: number;\n    private height: number;\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public getArea(): number {\n        return this.width * this.height;\n    }\n}\n\nexport default Rectangle\n","function logMethod(target: any, key: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n        document.writeln(`Method ${key} is called with arguments: ${JSON.stringify(args)}<br />`)\n        const result = originalMethod.apply(this, args)\n        document.writeln(`Method ${key} returns: ${JSON.stringify(result)}<br />`)\n        return result\n    };\n\n    return descriptor;\n}\n\nclass MyExampleClass {\n    @logMethod\n    addNumbers(a: number, b: number): number {\n        return a + b\n    }\n\n    @logMethod\n    greet(name: string): string {\n        return `Hello, ${name}!`\n    }\n}\n\nexport default function runApp6() {\n    const exampleInstance = new MyExampleClass();\n    document.writeln(\"exampleInstance.addNumbers(7, 9)<br />\")\n    exampleInstance.addNumbers(7, 9)\n    document.writeln(\"exampleInstance.greet('Jim')<br />\")\n    exampleInstance.greet('Jim')\n}","const callApi = (url: URL) => {\n    return new Promise((resolve, reject) => {\n        fetch(url)\n            .then((response) => {\n                return response.json()\n            })\n            .then((data) => {\n                resolve(data)\n            })\n            .catch((error) => {\n                reject(error)\n            })\n    });\n};\n\nexport default function runApp7() {\n    const result = document.createElement('p');\n    callApi(new URL('https://api.country.is')).then(\n        (data) => {\n            result.innerHTML = 'API result: ' + JSON.stringify(data)\n        })\n        .catch((error) => {\n            result.innerHTML = 'API error: ' + JSON.stringify(error)\n        }\n    );\n    document.body.append(result)\n}","const giaiThua = (n: number) : number => {\n    if (n < 2) {\n        return 1;\n    }\n    return n * giaiThua(n - 1);\n}\n\nconst kiemTraSoNguyenTo = (n: number) : boolean => {\n    if (n < 2) {\n        return true;\n    }\n    for (let i = 2; i < n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nexport {\n    giaiThua,\n    kiemTraSoNguyenTo\n}","import * as MathLibs from \"./ex-8.modules\"\nexport default function runApp8() {\n    document.writeln('giaiThua(10) is: ' + MathLibs.giaiThua(10) + '<br />');\n    document.writeln('kiemTraSoNguyenTo(113) is: ' + MathLibs.kiemTraSoNguyenTo(113) + '<br />');\n}","interface Product {\n    id: number;\n    name: string;\n    price: number;\n    quantity: number;\n}\n\nconst getPriceTotal = (products: Product[]) => products.reduce((total, product) => total + product.price * product.id, 0)\nconst getProductByPriceGT100 = (products: Product[]) => products.filter((product) => product.price > 100)\nconst getProductInfo = (products: Product[]): string[] =>\n    products.map(product => `Sản phẩm ${product.name} có giá ${product.price} đồng và còn ${product.quantity} sản phẩm.`)\n\nconst getProductByPriceLT100 = (products: Product[]) => products.reduce((total, product) => product.price < 100 ? total + product.price : total, 0)\n\nconst getDiscountedProducts = (products: Product[], discountPercent: number) => products.map(product => {\n    product.price = product.price - product.price * discountPercent / 100;\n    return product;\n});\n\nexport default function runApp9() {\n    const productsList : Product[] = [\n        {\n            id: 1,\n            name: 'Trà đá',\n            price: 200,\n            quantity: 50\n        },\n        {\n            id: 2,\n            name: 'Cafe',\n            price: 2000,\n            quantity: 25\n        },\n        {\n            id: 3,\n            name: 'Nước dừa tươi',\n            price: 150,\n            quantity: 100\n        },\n        {\n            id: 4,\n            name: 'Nước dừa lon',\n            price: 90,\n            quantity: 210\n        },\n        {\n            id: 5,\n            name: 'Nước ép hoa quả',\n            price: 350,\n            quantity: 10\n        },\n        {\n            id: 6,\n            name: 'Nước lọc',\n            price: 50,\n            quantity: 1000\n        }\n    ]\n    document.writeln(\"<br /><br />Product info: <br />\")\n    document.writeln(getProductInfo(productsList).join('<br />'));\n    document.writeln('<br />Total Quantity: ' + getPriceTotal(productsList))\n    document.writeln('<br /><br />Total product (price > 100): ' + getProductInfo(getProductByPriceGT100(productsList)).join('<br />'))\n    document.writeln('<br />Total product (price < 100): ' + getProductByPriceLT100(productsList))\n    document.writeln('<br /><br />Discound product info: ' + getProductInfo(getDiscountedProducts(productsList, 50)).join('<br />'))\n}\n\n","import * as Ex1 from \"./ex-1\"\nimport {Person, printPerson} from \"./ex-2\"\nimport getFirstItem from \"./ex-3\"\nimport {Colours, printColour} from \"./ex-4\"\nimport Rectangle from \"./ex-5\"\nimport runApp6 from \"./ex-6\"\nimport runApp7 from \"./ex-7\"\nimport runApp8 from \"./ex-8\"\nimport runApp9 from \"./ex-9\"\nfunction runApp1() : void {\n    let ex1 : HTMLParagraphElement = document.createElement('p');\n    ex1.innerHTML = 'Ex1.sumOfArray([1, 2, 3, 4, 5]) Is: ' + Ex1.sumOfArray([1, 2, 3, 4, 5]);\n    document.body.append(ex1);\n\n    const Jim : Person = {\n        name: 'Jim',\n        age: 30,\n        email: 'jim@arrowhitech.com'\n    }\n\n    printPerson(Jim);\n\n    let ex3 : HTMLParagraphElement = document.createElement('p');\n    ex3.innerHTML = 'First item in [1, 2, 3, 4, 5] is: ' + getFirstItem([1, 2, 3, 4, 5]);\n    document.body.append(ex3);\n    \n    printColour(Colours.RED)\n    \n    let ex5 : HTMLParagraphElement = document.createElement('p');\n    const rectangle = new Rectangle(9, 9);\n    ex5.innerHTML = 'Rectangle Area of 9 x 9 is: ' + rectangle.getArea();\n    document.body.append(ex5);\n    runApp6();\n    runApp7();\n    runApp8();\n    runApp9();\n}\n\nexport default runApp1\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJtYWluLnRzIiwid2Vlay0xL2V4LTEudHMiLCJ3ZWVrLTEvZXgtMi50cyIsIndlZWstMS9leC0zLnRzIiwid2Vlay0xL2V4LTQudHMiLCJ3ZWVrLTEvZXgtNS50cyIsIndlZWstMS9leC02LnRzIiwid2Vlay0xL2V4LTcudHMiLCJ3ZWVrLTEvZXgtOC5tb2R1bGVzLnRzIiwid2Vlay0xL2V4LTgudHMiLCJ3ZWVrLTEvZXgtOS50cyIsIndlZWstMS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQ0FBLElBQUEsVUFBQSxRQUFBLGdCQUFBLENBQUE7QUFDQSxDQUFBLEdBQUEsUUFBQSxPQUFBOzs7Ozs7O0FDREE7Ozs7OztBQU1BLFNBQWdCLFVBQWhCLENBQTJCLEdBQTNCLEVBQXlDO0FBQ3JDLFdBQU8sSUFBSSxNQUFKLENBQVcsVUFBQyxDQUFELEVBQWEsQ0FBYjtBQUFBLGVBQXFDLElBQUksQ0FBekM7QUFBQSxLQUFYLEVBQXVELENBQXZELENBQVA7QUFDSDtBQUZELFFBQUEsVUFBQSxHQUFBLFVBQUE7QUFHQTs7Ozs7O0FBTUEsU0FBZ0IsV0FBaEIsQ0FBNEIsR0FBNUIsRUFBMEM7QUFDdEMsUUFBSSxNQUFlLENBQW5CO0FBQ0EsU0FBSyxJQUFJLFVBQVUsQ0FBbkIsRUFBc0IsVUFBVSxJQUFJLE1BQXBDLEVBQTRDLFNBQTVDLEVBQXVEO0FBQ25ELGVBQU8sSUFBSSxPQUFKLENBQVA7QUFDSDtBQUNELFdBQU8sR0FBUDtBQUNIO0FBTkQsUUFBQSxXQUFBLEdBQUEsV0FBQTtBQU9BOzs7Ozs7QUFNQSxTQUFnQixXQUFoQixDQUE0QixHQUE1QixFQUEwQztBQUN0QyxRQUFJLE1BQWUsQ0FBbkI7QUFDQSxRQUFJLE9BQUosQ0FBWSxVQUFDLElBQUQsRUFBeUI7QUFDakMsZUFBTyxJQUFQO0FBQ0gsS0FGRDtBQUdBLFdBQU8sR0FBUDtBQUNIO0FBTkQsUUFB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Qix1Q0FBdUMsQ0FBQSxHQUFBLE9BQUEsT0FBQSxFQUFhLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsQ0FBYixDQUF2RDtBQUNBLGFBQVMsSUFBVCxDQUFjLE1BQWQsQ0FBcUIsR0FBckI7QUFFQSxLQUFBLEdBQUEsT0FBQSxXQUFBLEVBQVksT0FBQSxPQUFBLENBQVEsR0FBcEI7QUFFQSxRQUFJLE1BQTZCLFNBQVMsYUFBVCxDQUF1QixHQUF2QixDQUFqQztBQUNBLFFBQU0sWUFBWSxJQUFJLE9BQUEsT0FBSixDQUFjLENBQWQsRUFBaUIsQ0FBakIsQ0FBbEI7QUFDQSxRQUFJLFNBQUosR0FBZ0IsaUNBQWlDLFVBQVUsT0FBVixFQUFqRDtBQUNBLGFBQVMsSUFBVCxDQUFjLE1BQWQsQ0FBcUIsR0FBckI7QUFDQSxLQUFBLEdBQUEsT0FBQSxPQUFBO0FBQ0EsS0FBQSxHQUFBLE9BQUEsT0FBQTtBQUNBLEtBQUEsR0FBQSxPQUFBLE9BQUE7QUFDQSxLQUFBLEdBQUEsT0FBQSxPQUFBO0FBQ0g7QUFFRCxRQUFBLE9BQUEsR0FBZSxPQUFmIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiaW1wb3J0IHJ1bkFwcDEgZnJvbSBcIi4vd2Vlay0xL2luZGV4XCJcbnJ1bkFwcDEoKTsiLCIvKipcbiAqIFJldHVybnMgdGhlIHN1bSBvZiB0aGUgYXJyYXlcbiAqIFxuICogQHBhcmFtIHtBcnJheX0gYXJyIElzIGFuIGFycmF5IG9mIG51bWJlcnNcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IFRoZSBzdW0gb2YgdGhlIGFycmF5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdW1PZkFycmF5KGFyciA6IG51bWJlcltdKSA6IG51bWJlciB7XG4gICAgcmV0dXJuIGFyci5yZWR1Y2UoKGEgOiBudW1iZXIsIGIgOiBudW1iZXIpIDogbnVtYmVyID0+IGEgKyBiLCAwKTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgc3VtIG9mIHRoZSBhcnJheVxuICogXG4gKiBAcGFyYW0ge0FycmF5fSBhcnIgSXMgYW4gYXJyYXkgb2YgbnVtYmVyc1xuICogQHJldHVybnMge051bWJlcn0gVGhlIHN1bSBvZiB0aGUgYXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN1bU9mQXJyYXkyKGFyciA6IG51bWJlcltdKSA6IG51bWJlciB7XG4gICAgbGV0IHN1bSA6IG51bWJlciA9IDA7XG4gICAgZm9yIChsZXQgY291bnRlciA9IDA7IGNvdW50ZXIgPCBhcnIubGVuZ3RoOyBjb3VudGVyKyspIHtcbiAgICAgICAgc3VtICs9IGFycltjb3VudGVyXTtcbiAgICB9XG4gICAgcmV0dXJuIHN1bTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgc3VtIG9mIHRoZSBhcnJheVxuICogXG4gKiBAcGFyYW0ge0FycmF5fSBhcnIgSXMgYW4gYXJyYXkgb2YgbnVtYmVyc1xuICogQHJldHVybnMge051bWJlcn0gVGhlIHN1bSBvZiB0aGUgYXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN1bU9mQXJyYXkzKGFyciA6IG51bWJlcltdKSA6IG51bWJlciB7XG4gICAgbGV0IHN1bSA6IG51bWJlciA9IDA7XG4gICAgYXJyLmZvckVhY2goKGl0ZW0gOiBudW1iZXIpIDogdm9pZCA9PiB7XG4gICAgICAgIHN1bSArPSBpdGVtO1xuICAgIH0pO1xuICAgIHJldHVybiBzdW07XG59XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgc3VtT2ZBcnJheSxcbiAgICBzdW1PZkFycmF5MixcbiAgICBzdW1PZkFycmF5M1xufVxuIiwiZXhwb3J0IGludGVyZmFjZSBQZXJzb24ge1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICBhZ2U6IG51bWJlcixcbiAgICBlbWFpbDogU3RyaW5nXG59XG5leHBvcnQgZnVuY3Rpb24gcHJpbnRQZXJzb24ocGVyc29uIDogUGVyc29uKSA6IHZvaWQge1xuICAgIGRvY3VtZW50LndyaXRlbG4oYE5hbWU6ICR7cGVyc29uLm5hbWV9PGJyIC8+QWdlOiAke3BlcnNvbi5hZ2V9PGJyIC8+RW1haWw6ICR7cGVyc29uLmVtYWlsfWApO1xufVxuIiwiY29uc3QgZ2V0Rmlyc3RJdGVtID0gPFQ+KGl0ZW1zOiBUW10pOiBUIHwgbnVsbCA9PiBpdGVtcy5sZW5ndGggPiAwID8gaXRlbXNbMF0gOiBudWxsO1xuZXhwb3J0IGRlZmF1bHQgZ2V0Rmlyc3RJdGVtXG4iLCJlbnVtIENvbG91cnMge1xuICAgIFJFRCAgICAgPSAncmVkJyxcbiAgICBHUkVFTiAgID0gJ2dyZWVuJyxcbiAgICBCTFVFICAgID0gJ2JsdWUnXG59XG5cbmNvbnN0IHByaW50Q29sb3VyID0gKGNvbG91cjogQ29sb3VycykgPT4ge1xuICAgIGRvY3VtZW50LndyaXRlbG4oYENvbG9yIG5hbWU6ICR7Y29sb3VyfWApXG59XG5cbmV4cG9ydCB7XG4gICAgQ29sb3VycyxcbiAgICBwcmludENvbG91clxufVxuIiwiY2xhc3MgUmVjdGFuZ2xlIHtcbiAgICBwcml2YXRlIHdpZHRoOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBoZWlnaHQ6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFyZWEoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2lkdGggKiB0aGlzLmhlaWdodDtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlY3RhbmdsZVxuIiwiZnVuY3Rpb24gbG9nTWV0aG9kKHRhcmdldDogYW55LCBrZXk6IHN0cmluZywgZGVzY3JpcHRvcjogUHJvcGVydHlEZXNjcmlwdG9yKSB7XG4gICAgY29uc3Qgb3JpZ2luYWxNZXRob2QgPSBkZXNjcmlwdG9yLnZhbHVlO1xuXG4gICAgZGVzY3JpcHRvci52YWx1ZSA9IGZ1bmN0aW9uICguLi5hcmdzOiBhbnlbXSkge1xuICAgICAgICBkb2N1bWVudC53cml0ZWxuKGBNZXRob2QgJHtrZXl9IGlzIGNhbGxlZCB3aXRoIGFyZ3VtZW50czogJHtKU09OLnN0cmluZ2lmeShhcmdzKX08YnIgLz5gKVxuICAgICAgICBjb25zdCByZXN1bHQgPSBvcmlnaW5hbE1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICBkb2N1bWVudC53cml0ZWxuKGBNZXRob2QgJHtrZXl9IHJldHVybnM6ICR7SlNPTi5zdHJpbmdpZnkocmVzdWx0KX08YnIgLz5gKVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgfTtcblxuICAgIHJldHVybiBkZXNjcmlwdG9yO1xufVxuXG5jbGFzcyBNeUV4YW1wbGVDbGFzcyB7XG4gICAgQGxvZ01ldGhvZFxuICAgIGFkZE51bWJlcnMoYTogbnVtYmVyLCBiOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gYSArIGJcbiAgICB9XG5cbiAgICBAbG9nTWV0aG9kXG4gICAgZ3JlZXQobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGBIZWxsbywgJHtuYW1lfSFgXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBydW5BcHA2KCkge1xuICAgIGNvbnN0IGV4YW1wbGVJbnN0YW5jZSA9IG5ldyBNeUV4YW1wbGVDbGFzcygpO1xuICAgIGRvY3VtZW50LndyaXRlbG4oXCJleGFtcGxlSW5zdGFuY2UuYWRkTnVtYmVycyg3LCA5KTxiciAvPlwiKVxuICAgIGV4YW1wbGVJbnN0YW5jZS5hZGROdW1iZXJzKDcsIDkpXG4gICAgZG9jdW1lbnQud3JpdGVsbihcImV4YW1wbGVJbnN0YW5jZS5ncmVldCgnSmltJyk8YnIgLz5cIilcbiAgICBleGFtcGxlSW5zdGFuY2UuZ3JlZXQoJ0ppbScpXG59IiwiY29uc3QgY2FsbEFwaSA9ICh1cmw6IFVSTCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGZldGNoKHVybClcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoZGF0YSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfSlcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJ1bkFwcDcoKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNhbGxBcGkobmV3IFVSTCgnaHR0cHM6Ly9hcGkuY291bnRyeS5pcycpKS50aGVuKFxuICAgICAgICAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LmlubmVySFRNTCA9ICdBUEkgcmVzdWx0OiAnICsgSlNPTi5zdHJpbmdpZnkoZGF0YSlcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LmlubmVySFRNTCA9ICdBUEkgZXJyb3I6ICcgKyBKU09OLnN0cmluZ2lmeShlcnJvcilcbiAgICAgICAgfVxuICAgICk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQocmVzdWx0KVxufSIsImNvbnN0IGdpYWlUaHVhID0gKG46IG51bWJlcikgOiBudW1iZXIgPT4ge1xuICAgIGlmIChuIDwgMikge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgcmV0dXJuIG4gKiBnaWFpVGh1YShuIC0gMSk7XG59XG5cbmNvbnN0IGtpZW1UcmFTb05ndXllblRvID0gKG46IG51bWJlcikgOiBib29sZWFuID0+IHtcbiAgICBpZiAobiA8IDIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAyOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChuICUgaSA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQge1xuICAgIGdpYWlUaHVhLFxuICAgIGtpZW1UcmFTb05ndXllblRvXG59IiwiaW1wb3J0ICogYXMgTWF0aExpYnMgZnJvbSBcIi4vZXgtOC5tb2R1bGVzXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJ1bkFwcDgoKSB7XG4gICAgZG9jdW1lbnQud3JpdGVsbignZ2lhaVRodWEoMTApIGlzOiAnICsgTWF0aExpYnMuZ2lhaVRodWEoMTApICsgJzxiciAvPicpO1xuICAgIGRvY3VtZW50LndyaXRlbG4oJ2tpZW1UcmFTb05ndXllblRvKDExMykgaXM6ICcgKyBNYXRoTGlicy5raWVtVHJhU29OZ3V5ZW5UbygxMTMpICsgJzxiciAvPicpO1xufSIsImludGVyZmFjZSBQcm9kdWN0IHtcbiAgICBpZDogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBwcmljZTogbnVtYmVyO1xuICAgIHF1YW50aXR5OiBudW1iZXI7XG59XG5cbmNvbnN0IGdldFByaWNlVG90YWwgPSAocHJvZHVjdHM6IFByb2R1Y3RbXSkgPT4gcHJvZHVjdHMucmVkdWNlKCh0b3RhbCwgcHJvZHVjdCkgPT4gdG90YWwgKyBwcm9kdWN0LnByaWNlICogcHJvZHVjdC5pZCwgMClcbmNvbnN0IGdldFByb2R1Y3RCeVByaWNlR1QxMDAgPSAocHJvZHVjdHM6IFByb2R1Y3RbXSkgPT4gcHJvZHVjdHMuZmlsdGVyKChwcm9kdWN0KSA9PiBwcm9kdWN0LnByaWNlID4gMTAwKVxuY29uc3QgZ2V0UHJvZHVjdEluZm8gPSAocHJvZHVjdHM6IFByb2R1Y3RbXSk6IHN0cmluZ1tdID0+XG4gICAgcHJvZHVjdHMubWFwKHByb2R1Y3QgPT4gYFPhuqNuIHBo4bqpbSAke3Byb2R1Y3QubmFtZX0gY8OzIGdpw6EgJHtwcm9kdWN0LnByaWNlfSDEkeG7k25nIHbDoCBjw7JuICR7cHJvZHVjdC5xdWFudGl0eX0gc+G6o24gcGjhuqltLmApXG5cbmNvbnN0IGdldFByb2R1Y3RCeVByaWNlTFQxMDAgPSAocHJvZHVjdHM6IFByb2R1Y3RbXSkgPT4gcHJvZHVjdHMucmVkdWNlKCh0b3RhbCwgcHJvZHVjdCkgPT4gcHJvZHVjdC5wcmljZSA8IDEwMCA/IHRvdGFsICsgcHJvZHVjdC5wcmljZSA6IHRvdGFsLCAwKVxuXG5jb25zdCBnZXREaXNjb3VudGVkUHJvZHVjdHMgPSAocHJvZHVjdHM6IFByb2R1Y3RbXSwgZGlzY291bnRQZXJjZW50OiBudW1iZXIpID0+IHByb2R1Y3RzLm1hcChwcm9kdWN0ID0+IHtcbiAgICBwcm9kdWN0LnByaWNlID0gcHJvZHVjdC5wcmljZSAtIHByb2R1Y3QucHJpY2UgKiBkaXNjb3VudFBlcmNlbnQgLyAxMDA7XG4gICAgcmV0dXJuIHByb2R1Y3Q7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcnVuQXBwOSgpIHtcbiAgICBjb25zdCBwcm9kdWN0c0xpc3QgOiBQcm9kdWN0W10gPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAxLFxuICAgICAgICAgICAgbmFtZTogJ1Ryw6AgxJHDoScsXG4gICAgICAgICAgICBwcmljZTogMjAwLFxuICAgICAgICAgICAgcXVhbnRpdHk6IDUwXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAyLFxuICAgICAgICAgICAgbmFtZTogJ0NhZmUnLFxuICAgICAgICAgICAgcHJpY2U6IDIwMDAsXG4gICAgICAgICAgICBxdWFudGl0eTogMjVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6IDMsXG4gICAgICAgICAgICBuYW1lOiAnTsaw4bubYyBk4burYSB0xrDGoWknLFxuICAgICAgICAgICAgcHJpY2U6IDE1MCxcbiAgICAgICAgICAgIHF1YW50aXR5OiAxMDBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6IDQsXG4gICAgICAgICAgICBuYW1lOiAnTsaw4bubYyBk4burYSBsb24nLFxuICAgICAgICAgICAgcHJpY2U6IDkwLFxuICAgICAgICAgICAgcXVhbnRpdHk6IDIxMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogNSxcbiAgICAgICAgICAgIG5hbWU6ICdOxrDhu5tjIMOpcCBob2EgcXXhuqMnLFxuICAgICAgICAgICAgcHJpY2U6IDM1MCxcbiAgICAgICAgICAgIHF1YW50aXR5OiAxMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogNixcbiAgICAgICAgICAgIG5hbWU6ICdOxrDhu5tjIGzhu41jJyxcbiAgICAgICAgICAgIHByaWNlOiA1MCxcbiAgICAgICAgICAgIHF1YW50aXR5OiAxMDAwXG4gICAgICAgIH1cbiAgICBdXG4gICAgZG9jdW1lbnQud3JpdGVsbihcIjxiciAvPjxiciAvPlByb2R1Y3QgaW5mbzogPGJyIC8+XCIpXG4gICAgZG9jdW1lbnQud3JpdGVsbihnZXRQcm9kdWN0SW5mbyhwcm9kdWN0c0xpc3QpLmpvaW4oJzxiciAvPicpKTtcbiAgICBkb2N1bWVudC53cml0ZWxuKCc8YnIgLz5Ub3RhbCBRdWFudGl0eTogJyArIGdldFByaWNlVG90YWwocHJvZHVjdHNMaXN0KSlcbiAgICBkb2N1bWVudC53cml0ZWxuKCc8YnIgLz48YnIgLz5Ub3RhbCBwcm9kdWN0IChwcmljZSA+IDEwMCk6ICcgKyBnZXRQcm9kdWN0SW5mbyhnZXRQcm9kdWN0QnlQcmljZUdUMTAwKHByb2R1Y3RzTGlzdCkpLmpvaW4oJzxiciAvPicpKVxuICAgIGRvY3VtZW50LndyaXRlbG4oJzxiciAvPlRvdGFsIHByb2R1Y3QgKHByaWNlIDwgMTAwKTogJyArIGdldFByb2R1Y3RCeVByaWNlTFQxMDAocHJvZHVjdHNMaXN0KSlcbiAgICBkb2N1bWVudC53cml0ZWxuKCc8YnIgLz48YnIgLz5EaXNjb3VuZCBwcm9kdWN0IGluZm86ICcgKyBnZXRQcm9kdWN0SW5mbyhnZXREaXNjb3VudGVkUHJvZHVjdHMocHJvZHVjdHNMaXN0LCA1MCkpLmpvaW4oJzxiciAvPicpKVxufVxuXG4iLCJpbXBvcnQgKiBhcyBFeDEgZnJvbSBcIi4vZXgtMVwiXG5pbXBvcnQge1BlcnNvbiwgcHJpbnRQZXJzb259IGZyb20gXCIuL2V4LTJcIlxuaW1wb3J0IGdldEZpcnN0SXRlbSBmcm9tIFwiLi9leC0zXCJcbmltcG9ydCB7Q29sb3VycywgcHJpbnRDb2xvdXJ9IGZyb20gXCIuL2V4LTRcIlxuaW1wb3J0IFJlY3RhbmdsZSBmcm9tIFwiLi9leC01XCJcbmltcG9ydCBydW5BcHA2IGZyb20gXCIuL2V4LTZcIlxuaW1wb3J0IHJ1bkFwcDcgZnJvbSBcIi4vZXgtN1wiXG5pbXBvcnQgcnVuQXBwOCBmcm9tIFwiLi9leC04XCJcbmltcG9ydCBydW5BcHA5IGZyb20gXCIuL2V4LTlcIlxuZnVuY3Rpb24gcnVuQXBwMSgpIDogdm9pZCB7XG4gICAgbGV0IGV4MSA6IEhUTUxQYXJhZ3JhcGhFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGV4MS5pbm5lckhUTUwgPSAnRXgxLnN1bU9mQXJyYXkoWzEsIDIsIDMsIDQsIDVdKSBJczogJyArIEV4MS5zdW1PZkFycmF5KFsxLCAyLCAzLCA0LCA1XSk7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQoZXgxKTtcblxuICAgIGNvbnN0IEppbSA6IFBlcnNvbiA9IHtcbiAgICAgICAgbmFtZTogJ0ppbScsXG4gICAgICAgIGFnZTogMzAsXG4gICAgICAgIGVtYWlsOiAnamltQGFycm93aGl0ZWNoLmNvbSdcbiAgICB9XG5cbiAgICBwcmludFBlcnNvbihKaW0pO1xuXG4gICAgbGV0IGV4MyA6IEhUTUxQYXJhZ3JhcGhFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGV4My5pbm5lckhUTUwgPSAnRmlyc3QgaXRlbSBpbiBbMSwgMiwgMywgNCwgNV0gaXM6ICcgKyBnZXRGaXJzdEl0ZW0oWzEsIDIsIDMsIDQsIDVdKTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChleDMpO1xuICAgIFxuICAgIHByaW50Q29sb3VyKENvbG91cnMuUkVEKVxuICAgIFxuICAgIGxldCBleDUgOiBIVE1MUGFyYWdyYXBoRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBjb25zdCByZWN0YW5nbGUgPSBuZXcgUmVjdGFuZ2xlKDksIDkpO1xuICAgIGV4NS5pbm5lckhUTUwgPSAnUmVjdGFuZ2xlIEFyZWEgb2YgOSB4IDkgaXM6ICcgKyByZWN0YW5nbGUuZ2V0QXJlYSgpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKGV4NSk7XG4gICAgcnVuQXBwNigpO1xuICAgIHJ1bkFwcDcoKTtcbiAgICBydW5BcHA4KCk7XG4gICAgcnVuQXBwOSgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBydW5BcHAxXG4iXX0="}